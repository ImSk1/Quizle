è	
CC:\DAVID\REPOS\Quizle\Quizle\Quizle\Common\ValidationConstraints.cs
	namespace 	
Quizle
 
. 
Web 
. 
Common 
{ 
public 

static 
class !
ValidationConstraints -
{ 
public 
const 
int #
USER_USERNAME_MAXLENGHT 0
=1 2
$num3 5
;5 6
public 
const 
int #
USER_USERNAME_MINLENGHT 0
=1 2
$num3 4
;4 5
public 
const 
int #
USER_PASSWORD_MAXLENGHT 0
=1 2
$num3 5
;5 6
public		 
const		 
int		 #
USER_PASSWORD_MINLENGHT		 0
=		1 2
$num		3 4
;		4 5
public 
const 
int  
USER_EMAIL_MAXLENGHT -
=. /
$num0 2
;2 3
public 
const 
int  
USER_EMAIL_MINLENGHT -
=. /
$num0 1
;1 2
} 
} ñ
AC:\DAVID\REPOS\Quizle\Quizle\Quizle\Controllers\HomeController.cs
	namespace 	
Quizle
 
. 
Web 
. 
Controllers  
{ 
[ 
	Authorize 
] 
public		 

class		 
HomeController		 
:		  !

Controller		" ,
{

 
private 
readonly 
ILogger  
<  !
HomeController! /
>/ 0
_logger1 8
;8 9
public 
HomeController 
( 
ILogger %
<% &
HomeController& 4
>4 5
logger6 <
)< =
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
AllowAnonymous	 
] 
public 
IActionResult 
Index "
(" #
)# $
{ 	
if 
( 
User 
? 
. 
Identity 
? 
.  
IsAuthenticated  /
??0 2
false3 8
)8 9
{ 
return 
RedirectToAction '
(' (
$str( -
,- .
$str/ 5
)5 6
;6 7
} 
return 
View 
( 
) 
; 
} 	
[ 	
ResponseCache	 
( 
Duration 
=  !
$num" #
,# $
Location% -
=. /!
ResponseCacheLocation0 E
.E F
NoneF J
,J K
NoStoreL S
=T U
trueV Z
)Z [
][ \
public 
IActionResult 
Error "
(" #
)# $
{ 	
return 
View 
( 
new 
ErrorViewModel *
{+ ,
	RequestId- 6
=7 8
Activity9 A
.A B
CurrentB I
?I J
.J K
IdK M
??N P
HttpContextQ \
.\ ]
TraceIdentifier] l
}m n
)n o
;o p
} 	
}   
}!! ÖB
AC:\DAVID\REPOS\Quizle\Quizle\Quizle\Controllers\QuizController.cs
	namespace 	
Quizle
 
. 
Web 
. 
Controllers  
{ 
[ 
	Authorize 
] 
public 

class 
QuizController 
:  !

Controller" ,
{ 
private 
readonly 
ILogger  
<  !
QuizController! /
>/ 0
_logger1 8
;8 9
private 
readonly 
IConfiguration '
_config( /
;/ 0
private 
readonly 
IQuizDataService )
_quizDataService* :
;: ;
private 
readonly 
IUserService %
_userService& 2
;2 3
private 
readonly 
IMapper  
_mapper! (
;( )
public 
QuizController 
( 
ILogger %
<% &
QuizController& 4
>4 5
logger6 <
,< =
IConfiguration> L
configurationM Z
,Z [
IQuizDataService\ l
quizDataServicem |
,| }
IMapper	~ Ö
mapper
Ü å
,
å ç
IUserService
é ö
userService
õ ¶
)
¶ ß
{ 	
_logger 
= 
logger 
; 
_config 
= 
configuration #
;# $
_quizDataService 
= 
quizDataService .
;. /
_mapper 
= 
mapper 
; 
_userService 
= 
userService &
;& '
} 	
[ 	
HttpGet	 
] 
public   
async   
Task   
<   
IActionResult   '
>  ' (
All  ) ,
(  , -
)  - .
{!! 	
var"" 
listOfQuestions"" 
=""  !
await""" '
_quizDataService""( 8
.""8 9"
GetAllCurrentQuestions""9 O
(""O P
)""P Q
;""Q R
var## 
quizViewModel## 
=## 
listOfQuestions##  /
.$$ 
Select$$ 
($$ 
a$$ 
=>$$ 
new$$  
QuizViewModel$$! .
($$. /
)$$/ 0
{%% 
Question&& 
=&& 
a&&  
.&&  !
Question&&! )
,&&) *
Category'' 
='' 
a''  
.''  !
Category''! )
,'') *

Difficulty(( 
=((  
(((! "
int((" %
)((% &
Enum((& *
.((* +
Parse((+ 0
(((0 1
typeof((1 7
(((7 8

Difficulty((8 B
)((B C
,((C D
a((E F
.((F G

Difficulty((G Q
)((Q R
,((R S
Type)) 
=)) 
a)) 
.)) 
Type)) !
,))! "
Answers** 
=** 
a** 
.**  
Answers**  '
.**' (
Select**( .
(**. /
a**/ 0
=>**1 3
new**4 7
	AnswerDto**8 A
(**A B
)**B C
{++ 
Answer,, 
=,,  
a,,! "
.,," #
Answer,,# )
,,,) *
	IsCorrect-- !
=--" #
a--$ %
.--% &
	IsCorrect--& /
}.. 
).. 
... 
ToList.. 
(.. 
).. 
}// 
)// 
.00 
ToList00 
(00 
)00 
;00 
return11 
View11 
(11 
quizViewModel11 %
)11% &
;11& '
}22 	
[33 	
HttpPost33	 
]33 
public55 
async55 
Task55 
<55 
IActionResult55 '
>55' (
SelectDifficulty55) 9
(559 :
int55: =
?55= >
selectedDifficulty55? Q
)55Q R
{66 	
return77 
RedirectToAction77 #
(77# $
$str77$ *
,77* +
$str77, 2
,772 3
new774 7
{778 9
selectedDifficulty77: L
=77M N
selectedDifficulty77O a
}77a b
)77c d
;77d e
}88 	
[:: 	
HttpGet::	 
]:: 
public;; 
async;; 
Task;; 
<;; 
IActionResult;; '
>;;' (
Quiz;;) -
(;;- .
int;;. 1
?;;1 2
selectedDifficulty;;3 E
);;E F
{<< 	
if== 
(== 
selectedDifficulty== "
====# %
null==& *
)==* +
{>> 
return?? 
RedirectToAction?? '
(??' (
$str??( -
,??- .
$str??/ 5
)??5 6
;??6 7
}AA 
varCC 
quizDataCC 
=CC 
awaitCC  
_quizDataServiceCC! 1
.CC1 2
GetCurrentQuestionCC2 D
(CCD E
selectedDifficultyCCE W
)CCW X
;CCX Y
HttpContextDD 
.DD 
SessionDD 
.DD  
	SetStringDD  )
(DD) *
$strDD* 9
,DD9 :
quizDataDD; C
.DDC D
AnswersDDD K
.DDK L
WhereDDL Q
(DDQ R
aDDR S
=>DDT V
aDDW X
.DDX Y
	IsCorrectDDY b
==DDc e
trueDDf j
)DDj k
.DDk l
FirstDDl q
(DDq r
)DDr s
.DDs t
AnswerDDt z
.DDz {
ToString	DD{ É
(
DDÉ Ñ
)
DDÑ Ö
??
DDÜ à
$str
DDâ ã
)
DDã å
;
DDå ç
ifEE 
(EE 
quizDataEE 
==EE 
nullEE  
)EE  !
{FF 
returnGG 
ViewGG 
(GG 
)GG 
;GG 
}HH 
varII 
quizViewModelII 
=II 
_mapperII  '
.II' (
MapII( +
<II+ ,
QuizViewModelII, 9
>II9 :
(II: ;
quizDataII; C
)IIC D
;IID E
ifJJ 
(JJ 
quizViewModelJJ 
==JJ  
nullJJ! %
)JJ% &
{KK 
returnLL 
RedirectToActionLL '
(LL' (
$strLL( -
,LL- .
$strLL/ 5
)LL5 6
;LL6 7
}MM 
returnOO 
ViewOO 
(OO 
quizViewModelOO %
)OO% &
;OO& '
}PP 	
[QQ 	
HttpPostQQ	 
]QQ 
publicRR 
asyncRR 
TaskRR 
<RR 
IActionResultRR '
>RR' (
QuizRR) -
(RR- .
QuizViewModelRR. ;
modelRR< A
)RRA B
{SS 	
varTT 
correctAnswerTT 
=TT 
HttpContextTT  +
.TT+ ,
SessionTT, 3
.TT3 4
	GetStringTT4 =
(TT= >
$strTT> M
)TTM N
;TTN O
ifVV 
(VV 
!VV 

ModelStateVV 
.VV 
IsValidVV #
)VV# $
{WW 
returnXX 
RedirectToActionXX '
(XX' (
$strXX( .
)XX. /
;XX/ 0
}YY 
ifZZ 
(ZZ 
modelZZ 
.ZZ 
SelectedAnswerZZ $
.ZZ$ %
AnswerZZ% +
==ZZ, .
correctAnswerZZ/ <
)ZZ< =
{[[ 
_logger\\ 
.\\ 
LogDebug\\  
(\\  !
$str\\! +
)\\+ ,
;\\, -
await]] 
_userService]] "
.]]" #)
UpdateAllUsersHasDoneQuestion]]# @
(]]@ A
true]]A E
,]]E F
a]]G H
=>]]I K
a]]L M
.]]M N
UserName]]N V
==]]W Y
User]]Z ^
.]]^ _
Identity]]_ g
.]]g h
Name]]h l
)]]l m
;]]m n
}__ 
returnaa 
RedirectToActionaa #
(aa# $
$straa$ *
)aa* +
;aa+ ,
}bb 	
}dd 
}ee ¶9
AC:\DAVID\REPOS\Quizle\Quizle\Quizle\Controllers\UserController.cs
	namespace 	
Quizle
 
. 
Web 
. 
Controllers  
{ 
[		 
	Authorize		 
]		 
public

 

class

 
UserController

 
:

  !

Controller

" ,
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
private 
readonly 
SignInManager &
<& '
ApplicationUser' 6
>6 7
_signInManager8 F
;F G
public 
UserController 
( 
UserManager 
< 
ApplicationUser '
>' (
userManager) 4
,4 5
SignInManager 
< 
ApplicationUser )
>) *
signInManager+ 8
)8 9
{ 	
_userManager 
= 
userManager &
;& '
_signInManager 
= 
signInManager *
;* +
} 	
[ 	
HttpGet	 
] 
[ 	
AllowAnonymous	 
] 
public 
IActionResult 
Login "
(" #
)# $
{ 	
if 
( 
User 
? 
. 
Identity 
? 
.  
IsAuthenticated  /
??0 2
false3 8
)8 9
{ 
return 
RedirectToAction '
(' (
$str( /
,/ 0
$str1 7
)7 8
;8 9
} 
var   
model   
=   
new   
LoginViewModel   *
(  * +
)  + ,
;  , -
return"" 
View"" 
("" 
model"" 
)"" 
;"" 
}## 	
[%% 	
HttpPost%%	 
]%% 
[&& 	
AllowAnonymous&&	 
]&& 
public'' 
async'' 
Task'' 
<'' 
IActionResult'' '
>''' (
Login'') .
(''. /
LoginViewModel''/ =
model''> C
)''C D
{(( 	
if)) 
()) 
!)) 

ModelState)) 
.)) 
IsValid)) #
)))# $
{** 
return++ 
View++ 
(++ 
model++ !
)++! "
;++" #
},, 
var.. 
user.. 
=.. 
await.. 
_userManager.. )
...) *
FindByNameAsync..* 9
(..9 :
model..: ?
...? @
UserName..@ H
)..H I
;..I J
if00 
(00 
user00 
!=00 
null00 
)00 
{11 
var22 
result22 
=22 
await22 "
_signInManager22# 1
.221 2
PasswordSignInAsync222 E
(22E F
user22F J
,22J K
model22L Q
.22Q R
Password22R Z
,22Z [
false22\ a
,22a b
false22c h
)22h i
;22i j
if44 
(44 
result44 
.44 
	Succeeded44 $
)44$ %
{55 
return66 
RedirectToAction66 +
(66+ ,
$str66, 3
,663 4
$str665 ;
)66; <
;66< =
}77 
}88 

ModelState:: 
.:: 
AddModelError:: $
(::$ %
$str::% '
,::' (
$str::) 8
)::8 9
;::9 :
return<< 
View<< 
(<< 
model<< 
)<< 
;<< 
}== 	
[?? 	
HttpGet??	 
]?? 
[@@ 	
AllowAnonymous@@	 
]@@ 
publicAA 
IActionResultAA 
RegisterAA %
(AA% &
)AA& '
{BB 	
ifCC 
(CC 
UserCC 
?CC 
.CC 
IdentityCC 
?CC 
.CC  
IsAuthenticatedCC  /
??CC0 2
falseCC3 8
)CC8 9
{DD 
returnEE 
RedirectToActionEE '
(EE' (
$strEE( /
,EE/ 0
$strEE1 7
)EE7 8
;EE8 9
}FF 
varHH 
modelHH 
=HH 
newHH 
RegisterViewModelHH -
(HH- .
)HH. /
;HH/ 0
returnJJ 
ViewJJ 
(JJ 
modelJJ 
)JJ 
;JJ 
}KK 	
[MM 	
HttpPostMM	 
]MM 
[NN 	
AllowAnonymousNN	 
]NN 
publicOO 
asyncOO 
TaskOO 
<OO 
IActionResultOO '
>OO' (
RegisterOO) 1
(OO1 2
RegisterViewModelOO2 C
modelOOD I
)OOI J
{PP 	
ifQQ 
(QQ 
!QQ 

ModelStateQQ 
.QQ 
IsValidQQ #
)QQ# $
{RR 
returnSS 
ViewSS 
(SS 
modelSS !
)SS! "
;SS" #
}TT 
varVV 
userVV 
=VV 
newVV 
ApplicationUserVV *
(VV* +
)VV+ ,
{WW 
EmailXX 
=XX 
modelXX 
.XX 
EmailXX #
,XX# $
UserNameYY 
=YY 
modelYY  
.YY  !
UserNameYY! )
}ZZ 
;ZZ 
var\\ 
result\\ 
=\\ 
await\\ 
_userManager\\ +
.\\+ ,
CreateAsync\\, 7
(\\7 8
user\\8 <
,\\< =
model\\> C
.\\C D
Password\\D L
)\\L M
;\\M N
if^^ 
(^^ 
result^^ 
.^^ 
	Succeeded^^  
)^^  !
{__ 
return`` 
RedirectToAction`` '
(``' (
$str``( /
,``/ 0
$str``1 7
)``7 8
;``8 9
}aa 
foreachcc 
(cc 
varcc 
itemcc 
incc  
resultcc! '
.cc' (
Errorscc( .
)cc. /
{dd 

ModelStateee 
.ee 
AddModelErroree (
(ee( )
$stree) +
,ee+ ,
itemee- 1
.ee1 2
Descriptionee2 =
)ee= >
;ee> ?
}ff 
returnhh 
Viewhh 
(hh 
modelhh 
)hh 
;hh 
}ii 	
publicmm 
asyncmm 
Taskmm 
<mm 
IActionResultmm '
>mm' (
Logoutmm) /
(mm/ 0
)mm0 1
{nn 	
awaitoo 
_signInManageroo  
.oo  !
SignOutAsyncoo! -
(oo- .
)oo. /
;oo/ 0
returnqq 
RedirectToActionqq #
(qq# $
$strqq$ +
,qq+ ,
$strqq- 3
)qq3 4
;qq4 5
}rr 	
}ss 
}tt ﬂ
GC:\DAVID\REPOS\Quizle\Quizle\Quizle\MapperProfiles\QuizMapperProfile.cs
	namespace 	
Quizle
 
. 
Web 
. 
MapperProfiles #
{ 
public		 

class		 
QuizMapperProfile		 "
:		# $
Profile		% ,
{

 
public 
QuizMapperProfile  
(  !
)! "
{ 	
	CreateMap 
< 
QuizDto 
, 
QuizViewModel ,
>, -
(- .
). /
. 
	ForMember 
( 
a 
=> 
a  !
.! "

Difficulty" ,
,, -
b. /
=>0 2
b3 4
.4 5
MapFrom5 <
(< =
src= @
=>A C
(D E

DifficultyE O
)O P
EnumP T
.T U
ParseU Z
(Z [
typeof[ a
(a b

Difficultyb l
)l m
,m n
srco r
.r s

Difficultys }
)} ~
)~ 
)	 Ä
;
Ä Å
	CreateMap 
< 
Quiz 
, 
QuizDto #
># $
($ %
)% &
;& '
	CreateMap 
< 
Answer 
, 
	AnswerDto '
>' (
(( )
)) *
. 
	ForMember 
( 
a 
=> 
a  !
.! "
Answer" (
,( )
b* +
=>, .
b/ 0
.0 1
MapFrom1 8
(8 9
src9 <
=>= ?
src@ C
.C D
TextD H
)H I
)I J
;J K
} 	
} 
} ≥
<C:\DAVID\REPOS\Quizle\Quizle\Quizle\Models\ErrorViewModel.cs
	namespace 	
Quizle
 
. 
Web 
. 
Models 
{ 
public 

class 
ErrorViewModel 
{ 
public 
string 
? 
	RequestId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
ShowRequestId !
=>" $
!% &
string& ,
., -
IsNullOrEmpty- :
(: ;
	RequestId; D
)D E
;E F
} 
}		 –
<C:\DAVID\REPOS\Quizle\Quizle\Quizle\Models\LoginViewModel.cs
	namespace 	
Quizle
 
. 
Web 
. 
Models 
{ 
public 

class 
LoginViewModel 
{ 
[ 	
Required	 
] 
public 
string 
UserName 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
[

 	
Required

	 
]

 
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
} 
} ö
;C:\DAVID\REPOS\Quizle\Quizle\Quizle\Models\QuizViewModel.cs
	namespace 	
Quizle
 
. 
Web 
. 
Models 
{ 
public 

class 
QuizViewModel 
{ 
public 
string 
? 
Question 
{  !
get" %
;% &
set' *
;* +
}, -
public		 
string		 
?		 
Category		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
string

 
?

 
Type

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
int 
? 

Difficulty 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 
? 
CorrectAnswer $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
string 
? 
ImageUrl 
{  !
get" %
;% &
set' *
;* +
}, -
public 
List 
< 
	AnswerDto 
> 
? 
Answers  '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
[ 	
Required	 
] 
public 
	AnswerDto 
SelectedAnswer '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
=6 7
null8 <
!< =
;= >
} 
} ›
?C:\DAVID\REPOS\Quizle\Quizle\Quizle\Models\RegisterViewModel.cs
	namespace 	
Quizle
 
. 
Web 
. 
Models 
{ 
public 

class 
RegisterViewModel "
{ 
[ 	
Required	 
] 
[		 	
StringLength			 
(		 !
ValidationConstraints		 +
.		+ ,#
USER_USERNAME_MAXLENGHT		, C
,		C D
MinimumLength		E R
=		S T!
ValidationConstraints		U j
.		j k$
USER_USERNAME_MINLENGHT			k Ç
)
		Ç É
]
		É Ñ
public

 
string

 
UserName

 
{

  
get

! $
;

$ %
set

& )
;

) *
}

+ ,
=

- .
null

/ 3
!

3 4
;

4 5
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
[ 	
StringLength	 
( !
ValidationConstraints +
.+ , 
USER_EMAIL_MAXLENGHT, @
,@ A
MinimumLengthB O
=P Q!
ValidationConstraintsR g
.g h 
USER_EMAIL_MINLENGHTh |
)| }
]} ~
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
=* +
null, 0
!0 1
;1 2
[ 	
Required	 
] 
[ 	
StringLength	 
( !
ValidationConstraints +
.+ ,#
USER_PASSWORD_MAXLENGHT, C
,C D
MinimumLengthE R
=S T!
ValidationConstraintsU j
.j k$
USER_PASSWORD_MINLENGHT	k Ç
)
Ç É
]
É Ñ
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
=- .
null/ 3
!3 4
;4 5
[ 	
Compare	 
( 
nameof 
( 
Password  
)  !
)! "
]" #
[ 	
DataType	 
( 
DataType 
. 
Password #
)# $
]$ %
public 
string 
ConfirmPassword %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
=4 5
null6 :
!: ;
;; <
} 
} É=
.C:\DAVID\REPOS\Quizle\Quizle\Quizle\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
var 
connectionString 
= 
builder 
. 
Configuration ,
., -
GetConnectionString- @
(@ A
$strA T
)T U
;U V
builder 
. 
Services 
. 
AddDbContext 
< 
QuizleDbContext -
>- .
(. /
options/ 6
=>7 9
options 
. 
UseSqlServer 
( 
connectionString )
)) *
)* +
;+ ,
builder 
. 
Services 
. 3
'AddDatabaseDeveloperPageExceptionFilter 8
(8 9
)9 :
;: ;
builder 
. 
Services 
. 
AddDefaultIdentity #
<# $
ApplicationUser$ 3
>3 4
(4 5
options5 <
=>= ?
options@ G
.G H
SignInH N
.N O#
RequireConfirmedAccountO f
=g h
falsei n
)n o
. $
AddEntityFrameworkStores 
< 
QuizleDbContext -
>- .
(. /
)/ 0
;0 1
builder 
. 
Services 
. #
AddControllersWithViews (
(( )
)) *
;* +
builder 
. 
Services 
. %
AddDistributedMemoryCache *
(* +
)+ ,
;, -
builder 
. 
Services 
. 

AddSession 
( 
options #
=>$ &
{ 
options 
. 
Cookie 
. 
HttpOnly 
= 
true "
;" #
options 
. 
Cookie 
. 
IsEssential 
=  
true! %
;% &
} 
) 
; 
builder   
.   
Services   
.   &
ConfigureApplicationCookie   +
(  + ,
options  , 3
=>  4 6
{!! 
options"" 
."" 
	LoginPath"" 
="" 
$str"" %
;""% &
}## 
)## 
;## 
builder$$ 
.$$ 
Services$$ 
.$$ 
AddAutoMapper$$ 
($$ 
cfg$$ "
=>$$# %
{%% 
cfg&& 
.&& 

AddProfile&& 
<&& 
QuizMapperProfile&& $
>&&$ %
(&&% &
)&&& '
;&&' (
}'' 
)'' 
;'' 
builder(( 
.(( 
Services(( 
.(( 
	Configure(( 
<(( 
QuartzOptions(( (
>((( )
((() *
builder((* 1
.((1 2
Configuration((2 ?
.((? @

GetSection((@ J
(((J K
$str((K S
)((S T
)((T U
;((U V
builder** 
.** 
Services** 
.** 
	AddScoped** 
<** 
IQuizDataService** +
,**+ ,
QuizDataService**- <
>**< =
(**= >
)**> ?
;**? @
builder++ 
.++ 
Services++ 
.++ 
	AddScoped++ 
<++ 
IRepository++ &
,++& '

Repository++( 2
>++2 3
(++3 4
)++4 5
;++5 6
builder,, 
.,, 
Services,, 
.,, 
	AddScoped,, 
<,, 
IUserService,, '
,,,' (
UserService,,) 4
>,,4 5
(,,5 6
),,6 7
;,,7 8
builder00 
.00 
Services00 
.00 
	AddQuartz00 
(00 
q00 
=>00 
{11 
q22 
.22 
SchedulerId22 
=22 
$str22 $
;22$ %
q88 
.88 5
)UseMicrosoftDependencyInjectionJobFactory88 /
(88/ 0
)880 1
;881 2
q99 
.99 
UseSimpleTypeLoader99 
(99 
)99 
;99 
q:: 
.:: 
UseInMemoryStore:: 
(:: 
):: 
;:: 
q;; 
.;;  
UseDefaultThreadPool;; 
(;; 
tp;; 
=>;;  
{<< 
tp== 

.==
 
MaxConcurrency== 
=== 
$num== 
;== 
}>> 
)>> 
;>> 
q@@ 
.@@ 
ScheduleJob@@ 
<@@ 
QuizJob@@ 
>@@ 
(@@ 
trigger@@ "
=>@@# %
trigger@@& -
.AA 
WithIdentityAA 
(AA 
$strAA :
)AA: ;
.BB 
StartNowBB 
(BB 
)BB 
.CC )
WithDailyTimeIntervalScheduleCC *
(CC* +
xCC+ ,
=>CC- /
xCC0 1
.CC1 2
StartingDailyAtCC2 A
(CCA B
	TimeOfDayCCB K
.CCK L
HourAndMinuteOfDayCCL ^
(CC^ _
$numCC_ `
,CC` a
$numCCa b
)CCb c
)CCc d
.CCd e!
WithIntervalInMinutesCCe z
(CCz {
$numCC{ }
)CC} ~
)CC~ 
)DD 	
;DD	 

}EE 
)EE 
;EE 
builderFF 
.FF 
ServicesFF 
.FF "
AddQuartzHostedServiceFF '
(FF' (
optionsFF( /
=>FF0 2
{GG 
optionsII 
.II !
WaitForJobsToCompleteII !
=II" #
trueII$ (
;II( )
}JJ 
)JJ 
;JJ 
varLL 
appLL 
=LL 	
builderLL
 
.LL 
BuildLL 
(LL 
)LL 
;LL 
ifOO 
(OO 
appOO 
.OO 
EnvironmentOO 
.OO 
IsDevelopmentOO !
(OO! "
)OO" #
)OO# $
{PP 
appQQ 
.QQ %
UseDeveloperExceptionPageQQ !
(QQ! "
)QQ" #
;QQ# $
}RR 
elseSS 
{TT 
appUU 
.UU 
UseExceptionHandlerUU 
(UU 
$strUU )
)UU) *
;UU* +
appWW 
.WW 
UseHstsWW 
(WW 
)WW 
;WW 
}XX 
appZZ 
.ZZ 
UseHttpsRedirectionZZ 
(ZZ 
)ZZ 
;ZZ 
app[[ 
.[[ 
UseStaticFiles[[ 
([[ 
)[[ 
;[[ 
app]] 
.]] 

UseRouting]] 
(]] 
)]] 
;]] 
app__ 
.__ 
UseAuthentication__ 
(__ 
)__ 
;__ 
app`` 
.`` 
UseAuthorization`` 
(`` 
)`` 
;`` 
appbb 
.bb 

UseSessionbb 
(bb 
)bb 
;bb 
appcc 
.cc 
MapControllerRoutecc 
(cc 
namedd 
:dd 	
$strdd
 
,dd 
patternee 
:ee 
$stree 5
)ee5 6
;ee6 7
apphh 
.hh 
Runhh 
(hh 
)hh 	
;hh	 
